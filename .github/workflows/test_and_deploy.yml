# Adapted from https://github.com/metagraph-dev/metagraph/blob/main/.github/workflows/test_and_deploy.yml
name: Test and Deploy

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MAIN_PYVER: 3.8

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a
          conda install -q conda-build conda-verify
          conda env create -n ci -f ./buildscripts/env-py3.8.yml
          conda activate ci
          pip install -e .
      - name: Lint with Black
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate ci
          black . --check --diff
      - name: Pytest
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate ci
          pytest numba_extras
      - name: Conda Build
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda build --python ${{ env.MAIN_PYVER }} -c defaults -c numba -c conda-forge buildscripts/conda
          # This doesn't rebuild, but simply computes the name of the file that was previously built
          OUTPUT=$(conda build --output --python ${{ env.MAIN_PYVER }} -c defaults -c numba -c conda-forge buildscripts/conda)
          echo "Path to built package:"
          echo $OUTPUT
          echo "CONDA_BUILD_OUTPUT=$OUTPUT" >> $GITHUB_ENV
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: built_package
          path: ${{ env.CONDA_BUILD_OUTPUT }}
          retention-days: 7

  test_pyver:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        pyver:
          - 3.7
          - 3.8
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: built_package
          path: ./artifact_storage
      - name: Setup Python ${{ matrix.pyver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda create -n ci python=${{ matrix.pyver }} pytest conda-build
          conda activate ci
          # Setup a local channel
          BUILT_PKG=`ls ./artifact_storage | head -1`
          mkdir -p my_channel/noarch
          mv ./artifact_storage/$BUILT_PKG my_channel/noarch/
          cd my_channel
          conda index .
          cd ..
          # Install artifact
          conda install -q -c ./my_channel -c numba numba-extras
          conda list
      - name: numba system check
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate ci
          numba -s
      - name: Pytest
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate ci
          pytest --pyargs numba_extras
